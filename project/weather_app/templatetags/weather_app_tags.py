from django import template

register = template.Library()


WEATHER_CODE_DESCRIPTIONS = {
    0: 'Небо ясное',
    1: 'В основном ясно',
    2: 'Переменная облачность',
    3: 'Облачно с прояснениями',
    45: 'Туман и налипающая изморозь',
    48: 'Туман и налипающая изморозь',
    51: 'Слабый моросящий дождь',
    53: 'Моросящий дождь',
    55: 'Сильный моросящий дождь',
    56: 'Небольшой моросящий дождь',
    57: 'Плотный моросящий дождь',
    61: 'Небольшой дождь',
    63: 'Дождь',
    65: 'Сильный дождь',
    66: 'Небольшой ледяной дождь',
    67: 'Сильный ледяной дождь',
    71: 'Небольшой снегопад',
    73: 'Снегопад',
    75: 'Сильный снегопад',
    77: 'Снежная крупа',
    80: 'Слабый ливень',
    81: 'Ливень',
    82: 'Сильный ливень',
    85: 'Легкий снегопад',
    86: 'Сильный снегопад',
    95: 'Слабая гроза',
    96: 'Гроза с небольшим градом',
    99: 'Гроза с сильным градом'
}


@register.filter
def get_weather_description(weathercode):
    """
    Возвращает описание погоды по коду
    """
    return WEATHER_CODE_DESCRIPTIONS.get(weathercode, 'Описание отсутствует')


@register.filter
def get_item_for_loop(lst, index):
    """
    Возвращает элемент списка по указанному индексу
    """
    return lst[index]
